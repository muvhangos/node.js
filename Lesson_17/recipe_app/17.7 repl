const mongoose = require('mongoose');
const Course = require('./models/course');
const Subscriber = require('./models/subscriber');

async function run() {
  try {
    // Connect to your MongoDB database
    await mongoose.connect('mongodb://localhost:27017/recipe_db', {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log('Connected to DB');

    // Create a new Course document in the database
    const testCourse = await Course.create({
      title: "Tomato Land",
      description: "Locally farmed tomatoes only",
      zipCode: 12345,
      items: ["cherry", "heirloom"]
    });
    console.log('Course created:', testCourse);

    // Find one Subscriber document from the database
    const testSubscriber = await Subscriber.findOne({});

    // If no subscriber is found, log a message and exit the process with code 1
    // `process.exit(1)` immediately stops the Node.js process with an error code 1,
    // which usually indicates something went wrong (no subscriber found here).
    if (!testSubscriber) {
      console.log('No subscriber found');
      process.exit(1);
    }
    console.log('Subscriber found:', testSubscriber);

    // Add the new course's ID to the subscriber's 'courses' array
    testSubscriber.courses.push(testCourse._id);

    // Save the updated subscriber document back to the database
    await testSubscriber.save();
    console.log('Subscriber updated with new course');

    // Populate the 'courses' field in subscriber to replace course IDs with actual course documents
    const populatedSubscriber = await Subscriber.populate(testSubscriber, "courses");
    console.log('Populated subscriber:', populatedSubscriber);

    // Close the MongoDB connection cleanly
    mongoose.connection.close();
  } catch (err) {
    console.error(err);
  }
}

// Call the async function to start running the script
run();
