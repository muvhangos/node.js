//18.3 
// 1. Require Mongoose
const mongoose = require("mongoose");

// 2. Require your User model
const User = require("./models/users");

// 3. Use native promises
mongoose.Promise = global.Promise;

// 4. Connect to your MongoDB database
mongoose.connect("mongodb://localhost:27017/recipe_db", {
  useNewUrlParser: true,
  useUnifiedTopology: true
});

// 5. Create and save a new user
var testUser;

User.create({
  name: {
    first: "Jon",
    last: "Wexler"
  },
  email: "jon@jonwexler.com",
  password: "pass123"
})
  .then(user => {
    testUser = user;
    console.log("User created:", user);
  })
  .catch(error => console.log("Error:", error.message));

//18 .5
const Subscriber = require('./models/subscriber');

(async () => {
  try {
    
    const targetSubscriber = await Subscriber.findOne({ email: testUser.email });
    
    
    console.log(targetSubscriber);
  } catch (error) {
    console.error("Error fetching subscriber:", error);
  }
})();

//18.6
const mongoose = require('mongoose');
const User = require('./models/users');
const Subscriber = require('./models/subscriber');

// Connect to MongoDB
mongoose.connect('mongodb://localhost:27017/recipe_db', {
  useNewUrlParser: true,
  useUnifiedTopology: true
});

mongoose.Promise = global.Promise; // Optional in modern Node versions

(async () => {
  try {
    // 1. Create a new user
    const testUser = await User.create({
      name: {
        first: "Greg",
        last: "Lim"
      },
      email: "greg@ggmail.com",
      password: "pass123"
    });
    console.log("User created:", testUser);

    // 2. Find a matching subscriber by email
    const subscriber = await Subscriber.findOne({ email: testUser.email });

    if (subscriber) {
      // 3. Link the subscriber to the user
      testUser.subscribedAccount = subscriber;

      // 4. Save the updated user
      const updatedUser = await testUser.save();
      console.log("User successfully updated with subscriber:", updatedUser);
    } else {
      console.log("No matching subscriber found.");
    }
  } catch (err) {
    console.error("Error:", err.message);
  }
})();

